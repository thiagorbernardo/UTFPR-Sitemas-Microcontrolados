


ARM Macro Assembler    Page 1 


    1 00000000         ; main.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Prof. Guilherme Peron
    4 00000000         ; 24/08/2020
    5 00000000         ; Este programa espera o usuï¿½rio apertar a chave USR_S
                       W1.
    6 00000000         ; Caso o usuï¿½rio pressione a chave, o LED1 piscarï¿½ a
                        cada 0,5 segundo.
    7 00000000         
    8 00000000         ; ------------------------------------------------------
                       -------------------------
    9 00000000                 THUMB                        ; Instruï¿½ï¿½es do
                                                             tipo Thumb-2
   10 00000000         ; ------------------------------------------------------
                       -------------------------
   11 00000000         
   12 00000000         ; Declaraï¿½ï¿½es EQU - Defines
   13 00000000         ;<NOME>         EQU <VALOR>
   14 00000000         ; ========================
   15 00000000         
   16 00000000         ; ------------------------------------------------------
                       -------------------------
   17 00000000         ; ï¿½rea de Dados - Declaraï¿½ï¿½es de variï¿½veis
   18 00000000                 AREA             DATA, ALIGN=2
   19 00000000         ; Se alguma variï¿½vel for chamada em outro arquivo
   20 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riï¿½vel <var> a 
   21 00000000         ; partir de outro arquivo
   22 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variï¿½vel de nome <var>
   23 00000000         ; de <tam> bytes a partir da primeira 
   24 00000000         ; posiï¿½ï¿½o da RAM  
   25 00000000         
   26 00000000         ; ------------------------------------------------------
                       -------------------------
   27 00000000         ; ï¿½rea de Cï¿½digo - Tudo abaixo da diretiva a seguir 
                       serï¿½ armazenado na memï¿½ria de 
   28 00000000         ;                  cï¿½digo
   29 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   30 00000000 3F 06 5B 
              4F 66 6D 
              7D 07 7F 
              6F       digitos_vector
                               DCB              0x3F, 0x06, 0x5B, 0x4F, 0x66, 0
x6D, 0x7D, 0x07, 0x7F, 0x6F
   31 0000000A         
   32 0000000A         ; Se alguma funï¿½ï¿½o do arquivo for chamada em outro a
                       rquivo 
   33 0000000A                 EXPORT           Start       ; Permite chamar a 
                                                            funï¿½ï¿½o Start a 
                                                            partir de 
   34 0000000A         ; outro arquivo. No caso startup.s
   35 0000000A         
   36 0000000A         ; Se chamar alguma funï¿½ï¿½o externa 
   37 0000000A         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 
   38 0000000A         ; funï¿½ï¿½o <func>
   39 0000000A                 IMPORT           PLL_Init



ARM Macro Assembler    Page 2 


   40 0000000A                 IMPORT           SysTick_Init
   41 0000000A                 IMPORT           SysTick_Wait1ms
   42 0000000A                 IMPORT           SysTick_Wait1s
   43 0000000A                 IMPORT           GPIO_Init
   44 0000000A                 IMPORT           Display_show
   45 0000000A                 IMPORT           liga_LED
   46 0000000A                 IMPORT           PortB_Output
   47 0000000A                 IMPORT           PortJ_Input
   48 0000000A         
   49 0000000A         
   50 0000000A         ; ------------------------------------------------------
                       -------------------------
   51 0000000A         ; Funï¿½ï¿½o main()
   52 0000000A         Start
   53 0000000A F7FF FFFE       BL               PLL_Init    ;Chama a subrotina 
                                                            para alterar o cloc
                                                            k do microcontrolad
                                                            or para 80MHz
   54 0000000E F7FF FFFE       BL               SysTick_Init
   55 00000012 F7FF FFFE       BL               GPIO_Init   ;Chama a subrotina 
                                                            que inicializa os G
                                                            PIO
   56 00000016         
   57 00000016         MainLoop
   58 00000016 F8DF C070       LDR              R12,=digitos_vector
   59 0000001A F04F 0A00       MOV              R10,#0
   60 0000001E F04F 0B00       MOV              R11,#0
   61 00000022 E7FF            B                LOOP
   62 00000024         
   63 00000024         LOOP
   64 00000024 F8DF C060       LDR              R12,=digitos_vector
   65 00000028 F81C 000A       LDRB             R0,[R12, R10]
   66 0000002C F7FF FFFE       BL               Display_show
   67 00000030 F04F 0010       MOV              R0,#0x10
   68 00000034 F7FF FFFE       BL               PortB_Output
   69 00000038 F7FF FFFE       BL               SysTick_Wait1ms
   70 0000003C         
   71 0000003C F04F 0000       MOV              R0,#0
   72 00000040 F7FF FFFE       BL               PortB_Output
   73 00000044 F7FF FFFE       BL               SysTick_Wait1ms
   74 00000048         
   75 00000048 F81C 000B       LDRB             R0,[R12, R11]
   76 0000004C F7FF FFFE       BL               Display_show
   77 00000050 F04F 0020       MOV              R0,#0x20
   78 00000054 F7FF FFFE       BL               PortB_Output
   79 00000058 F7FF FFFE       BL               SysTick_Wait1ms
   80 0000005C         
   81 0000005C F04F 0000       MOV              R0,#0
   82 00000060 F7FF FFFE       BL               PortB_Output
   83 00000064 F7FF FFFE       BL               SysTick_Wait1s
   84 00000068         
   85 00000068 F10B 0B01       ADD              R11,#1
   86 0000006C F1BB 0F0A       CMP              R11,#10
   87 00000070 DBD8            BLT              LOOP
   88 00000072         
   89 00000072 F1AB 0B0A       SUB              R11,#10
   90 00000076 F10A 0A01       ADD              R10,#1
   91 0000007A         
   92 0000007A F1BA 0F0A       CMP              R10,#10



ARM Macro Assembler    Page 3 


   93 0000007E DBD1            BLT              LOOP
   94 00000080         
   95 00000080 F1AA 0A0A       SUB              R10,#10
   96 00000084 E7CE            B                LOOP
   97 00000086         
   98 00000086         ;;LOOP_UNIT
   99 00000086         ; LDRB R0,[R12, ]
  100 00000086         ; BL Display_show
  101 00000086         ; MOV R0,#2_00100000
  102 00000086         ; BL PortB_Output
  103 00000086         ; ADD R3,#1 ;-> passo
  104 00000086         ; CMP R3,#9
  105 00000086         ; PUSH {R3}
  106 00000086         ; BL SysTick_Wait1s
  107 00000086         ; POP {R3}
  108 00000086         ;; BGE LOOP_UNIT
  109 00000086         ;; B LOOP
  110 00000086         
  111 00000086         ;Verifica_Nenhuma
  112 00000086         ; CMP R0, #2_00000011    ;Verifica se nenhuma chave estï
                       ¿½ pressionada
  113 00000086         ; BNE Verifica_SW1    ;Se o teste viu que tem pelo menos
                        alguma chave pressionada pula
  114 00000086         ; MOV R0, #0                   ;Nï¿½o acender nenhum LED
                       
  115 00000086         ; BL PortQ_Output      ;Chamar a funï¿½ï¿½o para nï¿½o a
                       cender nenhum LED
  116 00000086         ; B MainLoop      ;Se o teste viu que nenhuma chave estï
                       ¿½ pressionada, volta para o laï¿½o principal
  117 00000086         ;Verifica_SW1 
  118 00000086         ; CMP R0, #2_00000010    ;Verifica se somente a chave SW
                       1 esta pressionada
  119 00000086         ; BNE Verifica_SW2             ;Se o teste falhou, pula
  120 00000086         ; MOV R0, #2_00010000    ;Setar o parï¿½metro de entrada
                        da funï¿½ï¿½o como o BIT4
  121 00000086         ; BL PortQ_Output     ;Chamar a funï¿½ï¿½o para setar o 
                       LED3
  122 00000086         ; B MainLoop                   ;Volta para o laï¿½o prin
                       cipal
  123 00000086         ;Verifica_SW2 
  124 00000086         ; CMP R0, #2_00000001    ;Verifica se somente a chave SW
                       2 esta pressionada
  125 00000086         ; BNE Verifica_Ambas           ;Se o teste falhou, pula
  126 00000086         ; MOV R0, #2_00000001    ;Setar o parï¿½metro de entrada
                        da funï¿½ï¿½o como o BIT0
  127 00000086         ; BL PortQ_Output     ;Chamar a funï¿½ï¿½o para setar o 
                       LED4
  128 00000086         ; B MainLoop                   ;Volta para o laï¿½o prin
                       cipal 
  129 00000086         ;Verifica_Ambas
  130 00000086         ; CMP R0, #2_00000000    ;Verifica se ambas as chaves es
                       tao pressionadas
  131 00000086         ; BNE MainLoop             ;Se o teste falhou, pula
  132 00000086         ; MOV R0, #2_00010001    ;Setar o parï¿½metro de entrada
                        da funï¿½ï¿½o como o BIT0
  133 00000086         Liga_Display
  134 00000086         
  135 00000086         
  136 00000086         ;-------------------------------------------------------



ARM Macro Assembler    Page 4 


                       -------------------------
  137 00000086         ; Funï¿½ï¿½o Pisca_LED
  138 00000086         ; Parï¿½metro de entrada: Nï¿½o tem
  139 00000086         ; Parï¿½metro de saï¿½da: Nï¿½o tem
  140 00000086         ;Pisca_LED
  141 00000086         ; MOV R0, #2_10     ;Setar o parï¿½metro de entrada da f
                       unï¿½ï¿½o setando o BIT1
  142 00000086         ; PUSH {LR}
  143 00000086         ; BL PortN_Output     ;Chamar a funï¿½ï¿½o para acender 
                       o LED1
  144 00000086         ; MOV R0, #500                ;Chamar a rotina para espe
                       rar 0,5s
  145 00000086         ; BL SysTick_Wait1ms
  146 00000086         ; MOV R0, #0      ;Setar o parï¿½metro de entrada da fun
                       ï¿½ï¿½o apagando o BIT1
  147 00000086         ; BL PortN_Output     ;Chamar a rotina para apagar o LED
                       
  148 00000086         ; MOV R0, #500                ;Chamar a rotina para espe
                       rar 0,5
  149 00000086         ; BL SysTick_Wait1ms 
  150 00000086         ; POP {LR}
  151 00000086         ; BX LR       ;return
  152 00000086         
  153 00000086         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
  154 00000086         ; Fim do Arquivo
  155 00000086         ; ------------------------------------------------------
                       --------------------------------------------------------
                       ----------- 
  156 00000086 00 00           ALIGN                        ;Garante que o fim 
                                                            da seï¿½ï¿½o estï¿½
                                                             alinhada 
  157 00000088                 END                          ;Fim do arquivo
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\objects\main.d -o.\objects\main.o -IC:\Users\thiag\AppData
\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL
 SETA 1" --predefine="__UVISION_VERSION SETA 536" --predefine="TM4C1294NCPDT SE
TA 1" --list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 18 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 29 in file main.s
   Uses
      None
Comment: .text unused
LOOP 00000024

Symbol: LOOP
   Definitions
      At line 63 in file main.s
   Uses
      At line 61 in file main.s
      At line 87 in file main.s
      At line 93 in file main.s
      At line 96 in file main.s

Liga_Display 00000086

Symbol: Liga_Display
   Definitions
      At line 133 in file main.s
   Uses
      None
Comment: Liga_Display unused
MainLoop 00000016

Symbol: MainLoop
   Definitions
      At line 57 in file main.s
   Uses
      None
Comment: MainLoop unused
Start 0000000A

Symbol: Start
   Definitions
      At line 52 in file main.s
   Uses
      At line 33 in file main.s
Comment: Start used once
digitos_vector 00000000

Symbol: digitos_vector
   Definitions
      At line 30 in file main.s
   Uses
      At line 58 in file main.s
      At line 64 in file main.s

6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Display_show 00000000

Symbol: Display_show
   Definitions
      At line 44 in file main.s
   Uses
      At line 66 in file main.s
      At line 76 in file main.s

GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 43 in file main.s
   Uses
      At line 55 in file main.s
Comment: GPIO_Init used once
PLL_Init 00000000

Symbol: PLL_Init
   Definitions
      At line 39 in file main.s
   Uses
      At line 53 in file main.s
Comment: PLL_Init used once
PortB_Output 00000000

Symbol: PortB_Output
   Definitions
      At line 46 in file main.s
   Uses
      At line 68 in file main.s
      At line 72 in file main.s
      At line 78 in file main.s
      At line 82 in file main.s

PortJ_Input 00000000

Symbol: PortJ_Input
   Definitions
      At line 47 in file main.s
   Uses
      None
Comment: PortJ_Input unused
SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 40 in file main.s
   Uses
      At line 54 in file main.s
Comment: SysTick_Init used once
SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 41 in file main.s
   Uses
      At line 69 in file main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

      At line 73 in file main.s
      At line 79 in file main.s

SysTick_Wait1s 00000000

Symbol: SysTick_Wait1s
   Definitions
      At line 42 in file main.s
   Uses
      At line 83 in file main.s
Comment: SysTick_Wait1s used once
liga_LED 00000000

Symbol: liga_LED
   Definitions
      At line 45 in file main.s
   Uses
      None
Comment: liga_LED unused
9 symbols
352 symbols in table
